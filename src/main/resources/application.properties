quarkus.rest-client.nodejs-api.url=http://localhost:3000
quarkus.rest-client.nodejs-api.scope=javax.inject.Singleton

# Configuration of CRUD API service (DropWizard)
quarkus.rest-client.crud-api.url=http://localhost:3000
quarkus.rest-client.crud-api.scope=javax.inject.Singleton

org.eclipse.microprofile.rest.client.propagateHeaders=Authorization


# Configure the outgoing spring-quarkus RabbitMQ exchange
mp.messaging.outgoing.spring-quarkus-out.connector=smallrye-rabbitmq
mp.messaging.outgoing.spring-quarkus-out.exchange.name=spring-quarkus
mp.messaging.outgoing.spring-quarkus-out.exchange.type=direct
mp.messaging.outgoing.spring-quarkus-out.default-routing-key=enable_account

# Configure the incoming RabbitMQ exchange
mp.messaging.incoming.spring-quarkus-in.connector=smallrye-rabbitmq
#queue.declare must be set to false if the queue already exists
mp.messaging.incoming.spring-quarkus-in.queue.declare=false
mp.messaging.incoming.spring-quarkus-in.queue.name=add_user


# Configure the outgoing RabbitMQ exchange
mp.messaging.outgoing.demo-out.connector=smallrye-rabbitmq
mp.messaging.outgoing.demo-out.exchange.name=demo-direct
mp.messaging.outgoing.demo-out.exchange.type=direct
mp.messaging.outgoing.demo-out.default-routing-key=queue-1

# Configure the incoming RabbitMQ exchange
mp.messaging.incoming.demo-in.connector=smallrye-rabbitmq
#queue.declare must be set to false if the queue already exists
mp.messaging.incoming.demo-in.queue.declare=false
mp.messaging.incoming.demo-in.queue.name=demo-direct-1
